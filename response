//파일입출력
function saveFile() {//github에서 코드불러오기
    file = "storage/emulated/0/kbot/response.js";
    checksum = org.jsoup.Jsoup.connect("https://github.com/sjh7711/bot/commits/master").get().select("div.repository-content>a").attr("href").split('commit/')[1];
    conn = new java.net.URL("https://raw.githubusercontent.com/sjh7711/bot/"+checksum+"/response").openConnection();
    br = new java.io.BufferedReader(new java.io.InputStreamReader(conn.getInputStream()));
    str = "";
    tmp = null;
    while ((tmp = br.readLine()) != null) {
        str += tmp + "\n";
    }
    var filedir = new java.io.File(file);
    try {
        var bw = new java.io.BufferedWriter(new java.io.FileWriter(filedir));
        bw.write(str.toString());
        bw.close();
    }
    catch (e) {
        return e;
    }
}
function reload() {
	var Timer = new Date();
    T.interrupt();
    saveFile();
    var time = (new Date() - Timer) / 1000;
    Api.replyRoom('test', "파일저장 완료 / " + time + "s");
	Api.reload();
    var time = (new Date() - Timer) / 1000;
	Api.replyRoom('test', "reloading 완료 / " + time + "s");
}
//-------------------------------------------------------변수----------------------------------------------------------//
var D = require("DBManager.js")("D");
//menu:메뉴/res:음식점/cele:전전컴채팅/cbot:봇제작방채팅/ctest:개인방채팅/cja:자생방채팅/cover:오버워치채팅
//D.selectForString("sqlite_master")
var T = require("ThreadManager.js");
//T.getThreadList()


//봇제작방용 변수
var flagbot = [0, 0]; //flag[0]=메뉴추가flag flag[1]=음식점추가flag
var menuagreebot = 0; //메뉴추가동의 인원수
var resagreebot = 0; //음식점추가동의 인원수
var flagmenubot; //추가심사중인 메뉴
var flagresbot; //추가심사중인 음식점
var sendermenubot = []; //메뉴추가에 동의한 사람
var senderresbot = []; //음식점추가에 동의한 사람

//전전컴톡방용 변수
var flagele = [0, 0]; 
var menuagreeele = 0;
var resagreeele = 0;
var flagmenuele; 
var flagresele; 
var sendermenuele = [];
var senderresele = [];

//개인방용 변수
var flagtest = [0, 0];
var menuagreetest = 0; 
var resagreetest = 0; 
var flagmenutest; 
var flagrestest;
var sendermenutest = []; 
var senderrestest = []; 

//자생방용 변수
var flagja = [0, 0]; 
var menuagreeja = 0; 
var resagreeja = 0; 
var flagmenuja; 
var flagresja;
var sendermenuja = []; 
var senderresja = []; 

//봇제작방용 변수
var flagbot = [0, 0]; 
var menuagreebot = 0; 
var resagreebot = 0; 
var flagmenubot; 
var flagresbot;
var sendermenubot = []; 
var senderresbot = []; 

//오버워치용 변수
var flagover = [0];
var menuagreeover = 0; 
var flagmenuover; 
var sendermenuover = []; 
//------------------------------------------------------기능함수---------------------------------------------------------//
//로또
function lotto(r) {
    var templotto = []; //로또번호 담길곳
    for (var i = 0; i < 100; i++) {
        var rad = Math.floor(1 + Math.random() * 45); //rad : 1~45중에 뽑히는 숫자
        if (templotto.indexOf(rad) == -1) {//중복이면 거른다
            templotto.push(rad);
        }
        if (templotto.length == 6) {//6개까지
            break;
        }
    }
    r.replier.reply(templotto.sort(compare).join(", "));
}

//오버워치
function overWatch(r) {
    var name = r.msg.substr(6);//배틀태그가 담기는 공간
    name1 = name.replace("#", "-");
    var source = Utils.getWebText("https://playoverwatch.com/ko-kr/career/pc/" + name1);
    if (source.indexOf("u-align-center h5") == -1) {
        replier.reply(name + "의 점수를 알 수 없습니다.");
    } else {
        var score = source.split("u-align-center h5\">")[1].split("<")[0].trim();
        var tier = source.split("rank-icons/rank-")[1].split("Tier.")[0];
        var most = source.split("u-max-width-container career-section")[3];
        var most1 = most.split("<div class=\"ProgressBar-title\">")[1].split("<")[0].trim();
        var most2 = most.split("<div class=\"ProgressBar-title\">")[2].split("<")[0].trim();
        var most3 = most.split("<div class=\"ProgressBar-title\">")[3].split("<")[0].trim();
        r.replier.reply(name + "\nTier : " + tier + "\nScore : " + score + "\n--------------\n경쟁전 모스트 영웅\n1. " + most1 + "\n2. " + most2 + "\n3. " + most3);
    }
}

//리스트에서 추천하기(1개 or 여러개)
function recom(r, name) { //name : DB이름
    var num = r.msg.split(" ")[1]; //num : 추천받고 싶은개수
    var list = D.selectForArray(name);
    if (num == undefined) {//1개만 추천
        var rad = Math.floor(Math.random() * list.length);
        r.replier.reply(list[rad]);
    }
    if (0 < num && num < 9) {//추천할 메뉴가 1개  ~ 8개이하일때
        var templist = list.slice(); //list의 복사본을 만든다.
        var listmul = []; //listmul : 랜덤으로 뽑힐 메뉴들이 담기는 공간
        for (var i = 0; i < num; i++) {
            var rad = Math.floor(Math.random() * templist.length);//rad : 뽑힌 메뉴
            listmul.push(templist.splice(rad, 1));//rad 번째 메뉴가 뽑혀서 listmul에 담김
        }
        r.replier.reply(listmul.join(", "));
    }
}

//리스트에 추가하기
function add(r, name, name1, num) { // name : DB 이름 / num : flag number
    var temp = r.msg.split(" ")[1];
    var list = D.selectForArray(name);
    if (D.selectForArray(name, null, "name=?", [temp]).length == 0) {
        D.insert('recom' + name, { name: temp })
        r.replier.reply(temp.이가() + " 건의되었습니다.");
        if (this["flag" + r.room][num] == 1) {
            r.replier.reply("진행중인 합의가 있습니다. 건의만 됩니다.");
        }
        if (this["flag" + r.room][num] == 0) {
            r.replier.reply("4명 이상이 메뉴동의를 입력하면 즉시 추가됩니다.");
            this["flag" + name + r.room] = temp;
            this["flag" + r.room][num] = 1;
        }
    } else {
        r.replier.reply(temp.은는() + " 이미있는 " + name1 + "입니다.");
    }
}

//리스트 추가 다수 동의
function agree(r, name, name1, num) { //name : DB 이름("menu", "res"...) / name1 : DB의 한글이름("메뉴", "음식점"..) / num : flag number
    list = D.selectForArray(name);
    if (r.msg == name1 + "동의") {
        if (this["sender" + name + r.room].indexOf(r.sender) == -1) {
            this[name + "agree" + r.room] += 1;
            r.replier.reply(this[name + "agree" + r.room] + "/4");
            this["sender" + name + r.room].push(r.sender);
        }
    }
    if (this[name + "agree" + r.room] == 4) {
        var temp = this["flag" + name + r.room];
        D.insert(name, { name: temp });
        r.replier.reply(name1 + "에 " + this["flag" + name + r.room].이가() + " 추가되었습니다.");
        clear(r, name, num);
    }
}

//메뉴추가 초기화함수
function clear(r, name, num) {
    this["flag" + r.room][num] = 0;
    this["sender" + name + r.room] = undefined;
    this["flag" + name + r.room] = undefined;
    this[name + "agree" + r.room] = 0;
}

//최근채팅
function recentchat(r) { //name : DB이름
    var tempchat = D.selectForArray('c'+r.room);
    var num = r.msg.split(" ")[1];//num : 최근채팅 보고싶은 개수
    if (0 < num && num < 17) {
        var temp = [];//뽑은 채팅을 담을 공간
        for (var i = tempchat.length - num - 1 ; i < tempchat.length - 1; i++) {
            temp.push(tempchat[i].join(" : "));//불러온 파일에서 채팅 옮겨담기
        }
        r.replier.reply(temp.join("\n"));
    } else {
        var temp = [];//뽑은 채팅을 담을 공간
        for (var i = tempchat.length - 7; i < tempchat.length - 1; i++) {
            temp.push(tempchat[i].join(" : "));//불러온 파일에서 채팅 옮겨담기
        }
        r.replier.reply(temp.join("\n"));
    }
}

const weatherSet = ({1:"맑음ㅤㅤ", 2:"구름약간", 3:"구름조금", 4:"구름보통", 5:"구름다수", 6:"구름많음", 7:"흐림ㅤㅤ", 8:"흐림ㅤㅤ", 11:"안개ㅤㅤ", 12:"비ㅤㅤㅤ", 13:"비ㅤㅤㅤ", 14:"비ㅤㅤㅤ", 15:"번개ㅤㅤ", 16:"번개ㅤㅤ", 17:"번개ㅤㅤ", 18:"비ㅤㅤㅤ", 19:"눈ㅤㅤㅤ", 20:"눈ㅤㅤㅤ", 21:"눈ㅤㅤㅤ", 22:"눈ㅤㅤㅤ", 23:"눈ㅤㅤㅤ", 24:"우박ㅤㅤ", 25:"25ㅤㅤ", 26:"26ㅤㅤ", 29:"진눈깨비", 30:"폭염ㅤㅤ", 31:"한파ㅤㅤ", 32:"바람ㅤㅤ", 33:"맑음ㅤㅤ", 34:"구름약간", 35:"구름조금", 36:"구름보통", 37:"구름다수", 38:"구름많음", 39:"비ㅤㅤㅤ", 40:"비ㅤㅤㅤ", 41:"번개ㅤㅤ", 42:"번개ㅤㅤ", 43:"눈ㅤㅤㅤ", 44:"눈ㅤㅤㅤ"});

//날씨
function getTimeWeather(url) {
    const rawData = org.jsoup.Jsoup.connect(url).userAgent("Mozilla/5.0 (Linux; Android 4.0.4; Galaxy Nexus Build/IMM76B) AppleWebKit/535.19 (KHTML, like Gecko) Chrome/18.0.1025.133 Mobile Safari/535.19").get();
    const data = rawData.select(".hourly-table").select(".overview-hourly");
    const timeData = data.select("thead div:not(.icon-weather)").eachText().toArray().map(v => {
        var r = /^(\d+)오(.)$/.exec(v);
        return Number(r[1]) + ((r[2] == "후") - (r[1] == "12")) * 12;
    }
    );
    const weatherData = data.select("thead div.icon-weather").eachAttr("class").toArray().map(v => /i\-(\d+)\-s/.exec(v)[1]);
    const tempData = data.select("tbody tr").get(0).select("td").eachText().toArray().map(v => v.split("\xb0")[0]);
    const stempData = data.select("tbody tr").get(1).select("td").eachText().toArray().map(v => v.split("\xb0")[0]);
    const windData = data.select("tbody tr").get(2).select("td>span").eachText().toArray();
    var res = "";
    for (var i in timeData) {
        res += String(timeData[i]).extension("0", 2) + "시 ";
        res += (weatherSet[weatherData[i]] || weatherData[i]) + " ";
        res += String(tempData[i]).extension(" ", 2) + "(" + String(stempData[i]).extension(" ", 2) + ") ";
        res += windData[i] + "\n";
    }
    const next = rawData.select(".control-bar").get(0).select("a.right-float").attr("href");
    return {res: res, next: next};
}

//홈페이지 파밍
//.header("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8") - cookie1 cookie2
//.data("url","http://www.knfb1377.or.kr%2Fhtml%2Fmain.html") - cookie2
var cookie1;
var cookie2;

function notice(r){
	if(cookie1==undefined||cookie2==undefined){
		cookie1 = org.jsoup.Jsoup.connect("http://www.knfb1377.or.kr/bbs/login.php?url=%2Fhtml%2Fmain.html")
		.method(org.jsoup.Connection.Method.GET).execute().cookies();

		cookie2 = org.jsoup.Jsoup.connect("https://www.knfb1377.or.kr:9001/bbs/login_check.php").cookies(cookie1)
		.data("mb_id","tyfb1377").data("mb_password","1q2w3e4r").data("x","30").data("y","30")
		.method(org.jsoup.Connection.Method.POST).execute().cookies();
	}
	
    var doc = org.jsoup.Jsoup.connect("http://www.knfb1377.or.kr/bbs/board.php?bo_table=10_01")
    .cookies(cookie2).cookies(cookie1).get().select('tbody').text().slice().replace(/ 관리자/g,"");
    
    if(doc==undefined){
    	cookie1 = org.jsoup.Jsoup.connect("http://www.knfb1377.or.kr/bbs/login.php?url=%2Fhtml%2Fmain.html")
		.method(org.jsoup.Connection.Method.GET).execute().cookies();

		cookie2 = org.jsoup.Jsoup.connect("https://www.knfb1377.or.kr:9001/bbs/login_check.php").cookies(cookie1)
		.data("mb_id","tyfb1377").data("mb_password","1q2w3e4r").data("x","30").data("y","30")
		.method(org.jsoup.Connection.Method.POST).execute().cookies();
		
		var doc = org.jsoup.Jsoup.connect("http://www.knfb1377.or.kr/bbs/board.php?bo_table=10_01")
    	.cookies(cookie2).cookies(cookie1).get().select('tbody').text().slice().replace(/ 관리자/g,"");
	}
    
    var secnum = doc.split(" ")[0] - 1
    
    for(var i=0;i<14;i++){
    	doc=doc.replace(secnum, "\n"+secnum);
    	secnum--;
    }
    r.replier.reply(doc);
}

//공지체크기
function noticecheck(){
	try{
		if(cookie1==undefined||cookie2==undefined){
			cookie1 = org.jsoup.Jsoup.connect("http://www.knfb1377.or.kr/bbs/login.php?url=%2Fhtml%2Fmain.html")
			.method(org.jsoup.Connection.Method.GET).execute().cookies();

			cookie2 = org.jsoup.Jsoup.connect("https://www.knfb1377.or.kr:9001/bbs/login_check.php").cookies(cookie1)
			.data("mb_id","tyfb1377").data("mb_password","1q2w3e4r").data("x","30").data("y","30")
			.method(org.jsoup.Connection.Method.POST).execute().cookies();
		}
	
    	var doc = org.jsoup.Jsoup.connect("http://www.knfb1377.or.kr/bbs/board.php?bo_table=10_01")
    	.cookies(cookie2).cookies(cookie1).get().select('tbody').text().slice().replace(/ 관리자/g,"");
    
    	if(doc==undefined){
    		cookie1 = org.jsoup.Jsoup.connect("http://www.knfb1377.or.kr/bbs/login.php?url=%2Fhtml%2Fmain.html")
			.method(org.jsoup.Connection.Method.GET).execute().cookies();

			cookie2 = org.jsoup.Jsoup.connect("https://www.knfb1377.or.kr:9001/bbs/login_check.php").cookies(cookie1)
			.data("mb_id","tyfb1377").data("mb_password","1q2w3e4r").data("x","30").data("y","30")
			.method(org.jsoup.Connection.Method.POST).execute().cookies();
		
			var doc = org.jsoup.Jsoup.connect("http://www.knfb1377.or.kr/bbs/board.php?bo_table=10_01")
    		.cookies(cookie2).cookies(cookie1).get().select('tbody').text().slice().replace(/ 관리자/g,"");
		}
		
		var checknum = doc.split(" ")[0];//제일 최근공지가 뭔지 확인
		Api.replyRoom('test', time()+" | 공지번호 :  "+checknum);
		
		if(checknum!=D.selectForArray('notice', 'number')[0]){//저장된 공지의 번호
			var secondnum = checknum-1;//두번째 공지 번호(split을위해)
			var newnotice = doc.split(secondnum)[0];//새공지
			Api.replyRoom("test","새공지! "+newnotice);
			var firstnum = newnotice.split(" ")[0];//새공지의 번호
			var newtext = newnotice.split(firstnum+" ")[1];//새공지의 텍스트
			D.update('notice', { number: firstnum, msg: newtext });
		}
	}catch(e){
		Log.e(e+"\n"+e.stack+'\n');
	}
};
T.register("noticeChecker",()=>{
	while(true){
		java.lang.Thread.sleep(3*30*1000);
		noticecheck();
	}
}).start();
//--------------------------------------------------------------------Response-------------------------------------------------//
function response(room, msg, sender, isGroupChat, replier, imageDB) {
    try {
        r = { replier: replier, msg: msg, sender: sender, room: room };

        //eval
        if (msg.indexOf("]") == 0) {
            if (room == 'test' || room == 'bot') {
                try {
                    replier.reply(eval(msg.substring(1)));
                } catch (e) {
                    replier.reply(e + "\n" + e.stack);
                }
            }
        }

        if (msg.indexOf("!최근채팅") == 0 || msg.indexOf("!ㅊㄱㅊㅌ") == 0) {
            if (room == 'test' || room == 'bot' || room == 'over' || room == 'ja' || room == 'agent' || room == 'ele') {
                recentchat(r);
            }
        }

        if (msg.indexOf("!예정기능") == 0 || msg.indexOf("!ㅇㅈㄱㄴ") == 0) {
            if (room == 'test' || room == 'bot' || room == 'ele') {
                replier.reply(D.selectForArray('willdo').join("\n"));
            }
        }

        if (msg.indexOf("!날씨") == 0 || msg.indexOf("!ㄴㅆ") == 0) {
            if (room == 'test' || room == 'agent' || room == 'bot') {
                getTimeWeather('https://www.accuweather.com/ko/kr/mujeon-dong/1873980/hourly-weather-forecast/1873980');
            }
        }

        if (msg.indexOf("!공지") == 0 || msg.indexOf("!ㄱㅈ") == 0) {
            if (room == 'test' || room == 'agent' || room == 'bot') {
                notice(r);
            }
        }

        //최근채팅저장
        if (msg.indexOf("/") == 0 || sender == "시립봇" || sender == "파이봇") {
        } else {
            if (room == 'test' || room == 'bot' || room == 'over' || room == 'ja' || room == 'agent' || room == 'ele') {
                D.insert('c' + room, { name: sender, msg: msg });
            }
        }

        if (msg.indexOf("!메뉴추가 ") == 0 || msg.indexOf("!ㅁㄴㅊㄱ ") == 0) {
            if (room == 'test' || room == 'bot' || room == 'ja' || room == 'ele') {
                add(r, "menu", "메뉴", 0);
            }
        }

        //메뉴동의합의
        if (this["flag" + room][0] == 1) {
            if (room == 'test' || room == 'bot' || room == 'ja' || room == 'ele') {
                agree(r, "menu", "메뉴", 0);
            }
        }

        if (msg.indexOf("!음식점추가 ") == 0 || msg.indexOf("!ㅇㅅㅈㅊㄱ ") == 0) {
            if (room == 'test' || room == 'bot' || room == 'ja' || room == 'ele') {
                add(r, "res", "음식점", 1);
            }
        }

        //음식점동의합의
        if (this["flag" + room][0] == 1) {
            if (room == 'test' || room == 'bot' || room == 'ja' || room == 'ele') {
                agree(r, "res", "음식점", 1);
            }
        }

        if (msg.indexOf("!음식점") == 0 || msg.indexOf("!ㅇㅅㅈ") == 0) {
            if (room == 'test' || room == 'bot' || room == 'ja' || room == 'ele') {
                recom(r, "res");
            }
        }

        //기능설명
        if (msg.indexOf("!기능 ") == 0) {
            func(r);
        }

        //로또
        if (msg.indexOf("!로또") == 0 || msg.indexOf("!ㄹㄸ") == 0) {
            lotto(r);
        }

        //오버워치
        if (msg.indexOf("!오버워치") == 0 || msg.indexOf("!ㅇㅂㅇㅊ") == 0) {
            overWatch(r);
        }

        //메뉴추천
        if (msg.indexOf("!메뉴") == 0 || msg.indexOf("!ㅁㄴ") == 0) {
            recom(r, "menu");
        }

        if (msg.indexOf("/기능") == 0) {
            replier.reply("!기능으로 작동합니다");
        }

        if (msg.indexOf("/학식") == 0) {
            replier.reply(sender + "님 학식 드시나요?");
        }

        if (msg.indexOf("시발") >= 0 || msg.indexOf("ㅅㅂ") >= 0 || msg.indexOf("tq") >= 0 || msg.indexOf("쓰발") >= 0 || msg.indexOf("ㅆㅂ") >= 0 || msg.indexOf("존나") >= 0 || msg.indexOf("개새") >= 0 || msg.indexOf("병신") >= 0 || msg.indexOf("좆") >= 0) {
            replier.reply("욕은 안좋아");
        }

        //-----------------------------------------------------개인채팅방------------------------------------------------
        if (room == "test") {
            if (msg == "!기능") {
                replier.reply("!로또\n!최근채팅\n!날씨\n!메뉴\n!메뉴추가\n!음식점\n!음식점추가\n!오버워치\n!예정기능\n!공지\n설명이 필요하면 !기능 오버워치 처럼 입력하세요.\n초성만 입력해도 기능이 작동합니다");
            }
        }
        //-----------------------------------------------------시립대 봇제작방-----------------------------------------------------
        if (room == "bot") {
            if (msg == "!기능") {
                replier.reply("!로또\n!최근채팅\n!메뉴\n!메뉴추가\n!음식점\n!음식점추가\n!오버워치\n!예정기능\n설명이 필요하면 !기능 오버워치 처럼 입력하세요.\n초성만 입력해도 기능이 작동합니다");
            }
        }
        //-------------------------------------------------------공익----------------------------------------------------
        if (room == 'agent') {
            if (msg == "!기능") {
                replier.reply("!공지\n!로또\n!최근채팅\n!메뉴\n!오버워치\n!날씨\n설명이 필요하면 !기능 오버워치 처럼 입력하세요.\n초성만 입력해도 기능이 작동합니다");
            }
        }
        //-------------------------------------------------------전전컴톡방-----------------------------------------------------
        if (room == "ele") {
            if (msg == "!기능") {
                replier.reply("!로또\n!최근채팅\n!메뉴\n!메뉴추가\n!음식점\n!음식점추가\n!오버워치\n!예정기능\n설명이 필요하면 !기능 오버워치 처럼 입력하세요.\n초성만 입력해도 기능이 작동합니다");
            }
        }
        //--------------------------------------------------------자생방-----------------------------------------
        if (room == 'ja') {
            if (msg == "!기능") {
                replier.reply("!로또\n!최근채팅\n!메뉴\n!메뉴추가\n!음식점\n!음식점추가\n!오버워치\n설명이 필요하면 !기능 오버워치 처럼 입력하세요.\n초성만 입력해도 기능이 작동합니다");
            }
        }
        //-----------------------------------------------------오버워치방-----------------------------------------
        if (room == 'over') {
            if (msg == "!기능") {
                replier.reply("!로또\n!최근채팅\n!메뉴\n!오버워치\n설명이 필요하면 !기능 오버워치 처럼 입력하세요.\n초성만 입력해도 기능이 작동합니다");
            }
        }
    }
    catch (e) {
        replier.reply(e + "\n" + e.stack);
    }
}
//-------------------------------------------------------------변경안할 함수------------------------------------------------------
//time
function time() {
	var today = new Date();
	var dayNames = ['(일요일)', '(월요일)', '(화요일)', '(수요일)', '(목요일)', '(금요일)', '(토요일)'];
	var day = dayNames[today.getDay()];
	
	var year   = today.getFullYear(),
	month  = today.getMonth() + 1,
	date   = today.getDate(),
	hour   = today.getHours(),
	minute = today.getMinutes(),
	second = today.getSeconds();
	ampm   = hour >= 12 ? 'PM' : 'AM';
	
	hour = hour % 12;
	hour = hour ? hour : 12;
	
	minute = minute < 10 ? '0' + minute : minute;
	second = second < 10 ? '0' + second : second;
	
	var now = year + '년 ' + month + '월 ' + date + '일 ' + day + ' ' + hour + ':' + minute + ':' + second + ' ' + ampm;
	
	return now
}
//sort에 필요한 compare
function compare(a, b) {
    return a - b;
}
//기능설명
function func(r) {
    if (r.msg.split(" ")[1] == "최근채팅") {
        r.replier.reply("최근채팅 6개를 출력합니다. !최근채팅 16 와 같이하면 16개를 불러오고 최대 16개까지 조회가능합니다.");
    }
    if (r.msg.split(" ")[1] == "오버워치") {
        r.replier.reply("!오버워치 똥개#5468와 같이 입력하면 티어,점수,경쟁전 모스트 3까지 보여줍니다.\n배치를 치지 않은 경우, 프로필이 비공개인 경우, 배틀태그를 입력하지 않은 경우, 대소문자를 정확하게 구분하지 않은 경우엔 정보를 알 수 없습니다.");
    }
    if (r.msg.split(" ")[1] == "로또") {
        r.replier.reply("로또번호를 추천해줍니다.");
    }
    if (r.msg.split(" ")[1] == "메뉴추천") {
        r.replier.reply("먹을 음식을 추천해 줍니다. !메뉴추천 3과 같이 입력하면 메뉴를 3개 추천해줍니다. 최대 8개를 추천해줍니다.");
    }
    if (r.msg.split(" ")[1] == "메뉴추가") {
        r.replier.reply("추가되었으면하는 음식을 추천해주세요. 4명의 합의가 있으면 바로 추가 될 수 있습니다. ex)!메뉴추가 냉장고");
    }
    if (r.msg.split(" ")[1] == "음식점추천") {
        r.replier.reply("시립대 주변 음식점을 추천해 줍니다. !음식점추천 3과 같이 입력하면 음식점를 3개 추천해줍니다. 최대 8개를 추천해줍니다.");
    }
    if (r.msg.split(" ")[1] == "음식점추가") {
        r.replier.reply("추가되었으면하는 음식점을 추천해주세요. 4명의 합의가 있으면 바로 추가 될 수 있습니다. ex)!음식점추가 789비어");
    }
    if (r.msg.split(" ")[1] == "예정기능") {
        r.replier.reply("앞으로 만들어볼 기능들입니다. 하는건 내맘");
    }
    if (r.msg.split(" ")[1] == "공지") {
        r.replier.reply("공지 1페이지(15개)를 띄워줍니다");
    }
    if (r.msg.split(" ")[1] == "날씨") {
        r.replier.reply("무전동 날씨를 보여줍니다");
    }
}

String.prototype.rmspace=function(){
	return this.toString().replace(/^\s*/,"").replace(/\s*$/,"");
}
String.prototype.rmtag=function(){
	return this.toString().replace(/<[^>]+>/g,"");
}
String.prototype.replaceAmp=function(){
	var res=this.toString();
	var tmp;
	while(tmp=/&#x....;/.exec(res)){
		res=res.replace(tmp[0],String.fromCharCode(parseInt(tmp[0].substr(3,4),16)));
	}
	while(tmp=/&#..;/.exec(res)){
		res=res.replace(tmp[0],String.fromCharCode(parseInt(tmp[0].substr(2,2))));
	}
	return res.replace(/&nbsp;/g,"\t").replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&quot;/g,'"').replace(/&amp;/g,"&");
}
String.prototype.replaceAmp2=function(){
	var res=this.toString();
	var tmp;
	while(tmp=/&#x....;/.exec(res)){
		res=res.replace(tmp[0],String.fromCharCode(parseInt(tmp[0].substr(3,4),16)));
	}
	return res.replace(/&nbsp;/g,"\t").replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&quot;/g,'"').replace(/&amp;/g,"&").replace(/<br>/g,"\n");
}
String.prototype.indexOfs=function(){  
	var res = -1;
	for (var i = 0; i < arguments.length; i++) {
		var tmp=this.toString().indexOf(arguments[i]);
		if(tmp==-1) continue;
		else if(res==-1) res=tmp;
		else if(tmp<res) res=this.toString().indexOf(arguments[i]);
	}
	return res;
}
String.prototype.includess=function(){
	for (var i = 0; i < arguments.length; i++) {
		if(this.toString().includes(arguments[i])) return true;
	}
	return false;
}
String.prototype.replaces=function(target){
	var res=this.toString();
	for (var i = 1; i < arguments.length; i++) {
		res=res.replace(arguments[i],target);
	}
	return res;
}
String.prototype.encoding=function(){
   return this.replace(/\\u([\da-fA-F]{4})/g,(m,p1)=>String.fromCharCode(parseInt(p1,16)));
}
String.prototype.URLEncode=function(){
	 return java.net.URLEncoder.encode(this.toString(),"UTF-8");
}
String.prototype.XMLEncode=function(){
	var res=""
	for(var i=0;i<this.toString().length;i++){
		res+="&#x"+java.lang.String.format("%04x",java.lang.Integer(this.toString().charCodeAt(i)))+";";
	}
	return res;
}
String.prototype.qtmark=function(){
	return this.toString().replace(/'/g,"''");
}
String.prototype.cut=function (line) {
    var str = this.toString();
    str = str.split("\n");
    //str[line - 1] += Array(500).join(String.fromCharCode(8237));
    str[line - 1] += String.fromCharCode(8237).repeat(500);
    str = str.join("\n");
    return str;
}
String.prototype.받침=function(){
	var lastCharCode=this.toString().charCodeAt(this.toString().length-1);
	if(lastCharCode>="가".charCodeAt(0) && lastCharCode<="힣".charCodeAt(0)){
		if((lastCharCode-"가".charCodeAt(0))%28==0) return false;
		else return true;
	}else return false;
	
}
String.prototype.은는=function(){
	return this.toString().받침() ? this.toString()+"은" : this.toString()+"는"; 
}
String.prototype.이가=function(){
	return this.toString().받침() ? this.toString()+"이" : this.toString()+"가"; 
}
String.prototype.과와=function(){
	return this.toString().받침() ? this.toString()+"과" : this.toString()+"와"; 
}
String.prototype.을를=function(){
	return this.toString().받침() ? this.toString()+"을" : this.toString()+"를"; 
}
String.prototype.조사=function(받침있음, 받침없음){
	return this.toString().받침() ? this.toString()+받침있음 : this.toString()+받침없음;
}
String.getRandomLowerCase=function(len){
	len = len||1;
	if(len<0) return false;
	var res="";
	for(var i=0;i<len;i++) res+=String.fromCharCode(97+Math.floor(Math.random()*26));
	return res;
}
String.format=function(str,arg){
	if(str.charAt(str.length-1).toLowerCase()=='d') return String(new java.lang.String.format(str,new java.lang.Integer(arg)));
	return String(new java.lang.String.format(str,arg));	
}
String.prototype.extension=function(char,length){
	const addLength = (length-this.toString().length >= 0) ? length-this.toString().length : 0; 
	return char.repeat(addLength)+this.toString();
}
String.prototype.extensionRight=function(char,length){
	const addLength = (length-this.toString().length >= 0) ? length-this.toString().length : 0; 
	return this.toString()+char.repeat(addLength);
}
Date.prototype.toDateString=function(sep){
	sep = (sep==undefined) ? '-' : sep;
	return String(this.getFullYear()).extension("0",4)+sep+String(this.getMonth()+1).extension("0",2)+sep+String(this.getDate()).extension("0",2);
}
Date.prototype.toTimeString=function(sep){
	sep = (sep==undefined) ? ':' : sep;
		return String(this.getHours()).extension("0",2)+sep+String(this.getMinutes()).extension("0",2)+sep+String(this.getSeconds()).extension("0",2);
}
